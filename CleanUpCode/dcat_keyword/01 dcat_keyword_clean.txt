import pandas as pd
import ast
import csv
import io


df = pd.read_excel('/content/input.xlsx')


columns_to_fix = ['Human', 'LLM']


def parse_list_from_string(s):
    s = str(s).strip()
    if s.startswith('[') and s.endswith(']'):
        s_inner = s[1:-1].strip()
        reader = csv.reader(io.StringIO(s_inner), skipinitialspace=True)
        items = next(reader)
        parsed_items = []
        for item in items:
            item = item.strip()
            if (item.startswith("'") and item.endswith("'")) or (item.startswith('"') and item.endswith('"')):
                item = item[1:-1]
            # Replace escaped quotes
            item = item.replace('\\"', '"').replace("\\'", "'")
            parsed_items.append(item)
        return parsed_items
    else:
        return []
def reconstruct_list_as_string(items):
    quoted_items = []
    for item in items:
        item_escaped = item.replace("'", "\\'")
        quoted_item = "'" + item_escaped + "'"
        quoted_items.append(quoted_item)
    list_string = '[' + ', '.join(quoted_items) + ']'
    return list_string

for column in columns_to_fix:
    corrected_values = []
    for idx, cell in df[column].items():  # Changed iteritems() to items()
        try:
            cell_str = str(cell)
            # Try to parse the cell content using ast.literal_eval
            value = ast.literal_eval(cell_str)
            if isinstance(value, list):
                value = [str(item) for item in value]
            else:
                value = parse_list_from_string(cell_str)
            list_string = reconstruct_list_as_string(value)
            corrected_values.append(list_string)
        except (SyntaxError, ValueError):
            value = parse_list_from_string(cell)
            list_string = reconstruct_list_as_string(value)
            corrected_values.append(list_string)
        except Exception as e:
            print(f"Error processing cell at index {idx} in column '{column}': {e}")
            corrected_values.append(cell)  # Keep the original cell content
    df[column] = corrected_values

df.to_excel('/content/cleaned_file.xlsx', index=False)
